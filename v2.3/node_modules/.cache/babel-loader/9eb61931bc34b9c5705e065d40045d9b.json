{"remainingRequest":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.2/node_modules/babel-loader/lib/index.js!/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.2/src/store/index.js","dependencies":[{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.2/src/store/index.js","mtime":1553965209409},{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.2/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\nimport _objectSpread from \"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.2/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.last-index-of\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.find\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport * as firebase from 'firebase';\nimport moment from 'moment';\nimport { stat } from 'fs';\nVue.use(Vuex);\nmoment.locale('nb');\nexport var store = new Vuex.Store({\n  state: {\n    loadedProjects: [],\n    interneProsjekter: [],\n    user: null,\n    loading: false,\n    error: null,\n    success: null\n  },\n  mutations: {\n    setLoadedProjects: function setLoadedProjects(state, payload) {\n      state.loadedProjects = payload;\n    },\n    setInterneProsjekter: function setInterneProsjekter(state, payload) {\n      state.interneProsjekter = payload;\n    },\n    setUser: function setUser(state, payload) {\n      state.user = payload;\n    },\n    updateUser: function updateUser(state, payload) {\n      var user = state.user.find(function (user) {\n        return user.userId === payload.userId;\n      });\n\n      if (payload.email) {\n        user.email = payload.email;\n      }\n\n      if (payload.phone) {\n        user.phone = payload.phone;\n      }\n    },\n    setLoadedUser: function setLoadedUser(state, payload) {\n      state.loadedUser = payload;\n    },\n    setLoading: function setLoading(state, payload) {\n      state.loading = payload;\n    },\n    setError: function setError(state, payload) {\n      state.error = payload;\n    },\n    setSuccess: function setSuccess(state, payload) {\n      state.success = payload;\n    },\n    clearError: function clearError(state) {\n      state.error = null;\n    },\n    clearSuccess: function clearSuccess(state, payload) {\n      state.success = null;\n    }\n  },\n  actions: {\n    // HENTER PROSJEKTER FRA DATABASEN\n    loadProjects: function loadProjects(_ref) {\n      var commit = _ref.commit;\n      var projects = [];\n      firebase.firestore().collection('projects').onSnapshot(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          projects.push({\n            id: doc.id,\n            title: doc.data().title,\n            content: doc.data().content,\n            imageUrl: doc.data().imageUrl,\n            date: moment(doc.data().date).format('LL'),\n            slug: doc.data().slug,\n            internt: doc.data().internt,\n            eksternt: doc.data().eksternt,\n            produksjon: doc.data().produksjon,\n            utvalgt: doc.data().utvalgt,\n            creatorId: doc.data().creatorId\n          });\n        });\n        commit('setLoading', false);\n        commit('setLoadedProjects', projects);\n      });\n    },\n    // LAGER ET NYTT PROSJEKT\n    createProject: function createProject(_ref2, payload) {\n      var commit = _ref2.commit;\n      var project = {\n        title: payload.title,\n        content: payload.content,\n        date: payload.date,\n        slug: payload.slug,\n        internt: false,\n        eksternt: false,\n        utvalgt: false,\n        produksjon: false,\n        creatorId: firebase.auth().currentUser.uid // LAGRER I DATABASEN\n\n      };\n      var imageUrl;\n      var key;\n      firebase.firestore().collection('projects').add(project).then(function (data) {\n        key = data.id;\n        return key;\n      }).then(function (key) {\n        var filename = payload.image.name;\n        var ext = filename.slice(filename.lastIndexOf('.'));\n        return firebase.storage().ref('projects/' + key + '.' + ext).put(payload.image);\n      }).then(function (fileData) {\n        return fileData.ref.getDownloadURL().then(function (downloadUrl) {\n          imageUrl = downloadUrl;\n          return firebase.firestore().collection('projects').doc(key).update({\n            imageUrl: downloadUrl\n          });\n        });\n        /* imageUrl = fileData.metadata.downloadURLs[0]\n        return firebase.firestore().collection('projects').child(key).update({imageUrl: imageUrl}) */\n      }).then(function () {\n        var success = {\n          message: 'Takk for ditt bidrag!'\n        };\n        commit('setSuccess', success);\n        commit('createProject', _objectSpread({}, project, {\n          imageUrl: imageUrl,\n          id: key\n        }));\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n\n    /* OPPDATERER PROSJEKTET */\n    updateProject: function updateProject(_, payload) {\n      console.log(payload.project);\n      var nyeProsjekter = firebase.firestore().collection('projects');\n      var produksjonProsjekter = firebase.firestore().collection('produksjon');\n      var project = {\n        title: payload.project.title,\n        content: payload.project.content,\n        date: payload.project.date,\n        slug: payload.project.slug,\n        internt: payload.project.internt,\n        eksternt: payload.project.eksternt,\n        utvalgt: payload.project.utvalgt,\n        produksjon: payload.project.produksjon,\n        creatorId: payload.project.creatorId\n      };\n\n      if (payload.imageUrl === undefined || payload.imageUrl === null) {\n        project.imageUrl = '';\n      }\n\n      if (payload.klasse === 1) {\n        console.log('Prosjektet er satt i produksjon');\n        console.log(project);\n        nyeProsjekter.doc(payload.project.id).delete(); //produksjonProsjekter.add(project)\n      }\n\n      if (payload.klasse === 2) {\n        console.log('Prosjektet er flyttet til Internt');\n      }\n\n      if (payload.klasse === 3) {\n        console.log('Prosjektet er flyttet til eksternt');\n      }\n\n      if (payload.klasse === 4) {\n        console.log('Prosjektet er flyttet til utvalgt');\n      }\n    },\n    // OPPDTATERER PROSJEKTET TIL INTERNT\n    updateToInternt: function updateToInternt(_ref3, payload) {\n      var commit = _ref3.commit;\n      commit('clearSuccess');\n      commit('clearError');\n      firebase.firestore().collection('projects').doc(payload.id).update({\n        internt: true,\n        eksternt: false,\n        produksjon: false\n      }).then(function () {\n        console.log('oppdatert til internt - ' + payload.title);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    // OPPDATER PROSJEKTET TIL EKSTERNT\n    updateToEksternt: function updateToEksternt(_ref4, payload) {\n      var commit = _ref4.commit,\n          state = _ref4.state;\n      commit('clearSuccess');\n      commit('clearError');\n      firebase.firestore().collection('projects').doc(payload.id).update({\n        eksternt: true,\n        internt: false,\n        produksjon: false\n      }).then(function () {\n        console.log('oppdatert til eksternt - ' + payload.title);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    // OPPDATER PROSJEKTET TIL INTERNT\n    updateToUtvalgt: function updateToUtvalgt(_ref5, payload) {\n      var commit = _ref5.commit;\n      commit('clearSuccess');\n      commit('clearError');\n      firebase.firestore().collection('projects').doc(payload.id).update({\n        eksternt: payload.eksternt,\n        internt: payload.internt,\n        produksjon: payload.produksjon,\n        utvalgt: true\n      }).then(function () {\n        console.log('oppdatert til utvalgt - ' + payload.title);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    // OPPDATER PROSJEKTET TIL PRODUKSJON\n    updateToProduksjon: function updateToProduksjon(_ref6, payload) {\n      var commit = _ref6.commit;\n      commit('clearSuccess');\n      commit('clearError');\n      firebase.firestore().collection('projects').doc(payload.id).update({\n        eksternt: payload.eksternt,\n        internt: payload.internt,\n        produksjon: true,\n        utvalgt: payload.utvalgt\n      }).then(function () {\n        console.log('oppdatert til produksjon - ' + payload.title);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n\n    /* SLETT PROSJEKT */\n    deleteProject: function deleteProject(_ref7, payload) {\n      var commit = _ref7.commit,\n          state = _ref7.state;\n      firebase.firestore().collection('projects').doc(payload.id).delete().then(function () {\n        state.loadedProjects = state.loadedProjects.filter(function (project) {\n          return project.id != payload.id;\n        });\n      });\n      console.log('Slettet prosjekt ' + payload.title);\n    },\n    // REGISTRERER EN NY BRUKER\n    signUserUp: function signUserUp(_ref8, payload) {\n      var commit = _ref8.commit,\n          getters = _ref8.getters;\n      commit('setLoading', true);\n      commit('clearSuccess');\n      commit('clearError');\n      firebase.firestore().collection('users').doc(payload.user.phone).get().then(function (doc) {\n        console.log(doc);\n\n        if (doc.exists) {\n          var error = {\n            message: 'Mobilnummber finnes'\n          };\n          commit('setError', error);\n        } else {\n          firebase.auth().createUserWithEmailAndPassword(payload.email, payload.passord).then(function (user) {\n            firebase.firestore().collection('users').doc(payload.user.phone).set({\n              email: payload.user.email,\n              name: payload.user.name,\n              slug: payload.user.slug,\n              phone: payload.user.phone,\n              gdpr: payload.user.gdpr,\n              isAdmin: false,\n              joined: payload.user.joined,\n              userId: user.user.uid\n            });\n            firebase.auth().currentUser.updateProfile({\n              displayName: payload.user.phone\n            }).then(function () {\n              console.log('oppdatert bruker');\n            }).catch(function (error) {\n              console.log(error);\n            });\n            commit('setLoading', false);\n            var newUser = [id = user.uid];\n            commit('setUser', newUser);\n          }).catch(function (error) {\n            commit('setLoading', false);\n            commit('setError', error);\n            console.log(error);\n          });\n        }\n      });\n    },\n    // OPPDATERER BRUKER EPOST OG TELEFONNUMMER\n    updateUser: function updateUser(_ref9, payload) {\n      var commit = _ref9.commit,\n          getters = _ref9.getters;\n      commit('setLoading', true);\n      commit('clearSuccess');\n      commit('clearError');\n      var updateObj = {};\n\n      if (payload.email) {\n        updateObj.email = payload.email;\n      }\n\n      if (payload.phone) {\n        updateObj.phone = payload.phone;\n      }\n\n      var userDoc = getters.user[0].phone;\n      firebase.auth().currentUser.updateEmail(payload.email).then(function () {\n        commit('setLoading', false);\n        commit('updateUser', payload);\n        var success = {\n          message: 'Epost adresse er endret'\n        };\n        commit('setSuccess', success);\n      }).then(function () {}).catch(function (error) {\n        console.log(error);\n        commit('setError', error);\n        commit('setLoading', false);\n      });\n    },\n    // LOGGER BRUKER INN\n    signUserIn: function signUserIn(_ref10, payload) {\n      var commit = _ref10.commit;\n      commit('setLoading', true);\n      commit('clearSuccess');\n      commit('clearError');\n      firebase.auth().signInWithEmailAndPassword(payload.email, payload.password).then(function (user) {\n        commit('setLoading', false);\n        var newUser = {\n          id: user.uid\n        };\n        commit('setUser', newUser);\n      }).catch(function (error) {\n        commit('setLoading', false);\n        commit('setError', error);\n        console.log(error);\n      });\n    },\n    loadUser: function loadUser(_ref11, payload) {\n      var commit = _ref11.commit;\n    },\n    // Henter bruker fra DB\n    fetchUserData: function fetchUserData(_ref12) {\n      var commit = _ref12.commit;\n      var userData = [];\n      firebase.firestore().collection('users').where('userId', '==', firebase.auth().currentUser.uid).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var docs = doc.data();\n          console.log(moment(docs.joined));\n          userData.push({\n            email: doc.data().email,\n            name: docs.name,\n            phone: docs.phone,\n            admin: docs.isAdmin,\n            joined: moment(doc.data().joined).format('LL'),\n            slug: docs.slug,\n            userId: docs.userId\n          });\n          console.log('Bruker epost ' + doc.data().email);\n        });\n      });\n      commit('setLoading', false);\n      commit('setUser', userData);\n    },\n    // METODE FOR Å AUTOMATISK LOGGE EN BRUKER INN\n    autoSignIn: function autoSignIn(_ref13, payload) {\n      var commit = _ref13.commit;\n      commit('setUser', {\n        id: payload.uid\n      });\n    },\n    // Logger ut bruker\n    logout: function logout(_ref14) {\n      var commit = _ref14.commit;\n      firebase.auth().signOut();\n      commit('setUser', null);\n    },\n    // FJERNER FEILMELDINGER HOS BRUKER\n    clearError: function clearError(_ref15) {\n      var commit = _ref15.commit;\n      commit('clearError');\n    },\n    // FJERNER SUCCESS MELDINGEN\n    clearSuccess: function clearSuccess(_ref16) {\n      var commit = _ref16.commit;\n      commit('clearSuccess');\n    }\n  },\n  getters: {\n    loadedProjects: function loadedProjects(state) {\n      return state.loadedProjects;\n    },\n    loadedProject: function loadedProject(state) {\n      return function (projectId) {\n        return state.loadedProjects.find(function (project) {\n          return project.id === projectId;\n        });\n      };\n    },\n    adminProject: function adminProject(state) {\n      return state.loadedProjects.filter(function (project) {\n        return project.internt === false && project.eksternt === false && project.utvalgt === false;\n      });\n    },\n    interneProsjekter: function interneProsjekter(state) {\n      return state.loadedProjects.filter(function (project) {\n        return project.internt;\n      });\n    },\n    eksterneProsjekter: function eksterneProsjekter(state) {\n      return state.loadedProjects.filter(function (project) {\n        return project.eksternt;\n      });\n    },\n    utvalgteProsjekter: function utvalgteProsjekter(state) {\n      return state.loadedProjects.filter(function (project) {\n        return project.utvalgt;\n      });\n    },\n    produksjonProsjekter: function produksjonProsjekter(state) {\n      return state.loadedProjects.filter(function (project) {\n        return project.produksjon;\n      });\n    },\n    brukerProsjekter: function brukerProsjekter(state) {\n      return state.loadedProjects.filter(function (project) {\n        return project.creatorId === state.user[0].userId;\n      });\n    },\n    loadedUser: function loadedUser(state) {\n      console.log(\"LoadedState user: \" + state.loadedUser);\n      return state.loadedUser;\n    },\n    user: function user(state) {\n      console.log(\"state user: \" + state.user);\n      return state.user;\n    },\n    loading: function loading(state) {\n      return state.loading;\n    },\n    error: function error(state) {\n      return state.error;\n    },\n    success: function success(state) {\n      return state.success;\n    }\n  }\n});",{"version":3,"sources":["/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.2/src/store/index.js"],"names":["Vue","Vuex","firebase","moment","stat","use","locale","store","Store","state","loadedProjects","interneProsjekter","user","loading","error","success","mutations","setLoadedProjects","payload","setInterneProsjekter","setUser","updateUser","find","userId","email","phone","setLoadedUser","loadedUser","setLoading","setError","setSuccess","clearError","clearSuccess","actions","loadProjects","commit","projects","firestore","collection","onSnapshot","snapshot","forEach","doc","push","id","title","data","content","imageUrl","date","format","slug","internt","eksternt","produksjon","utvalgt","creatorId","createProject","project","auth","currentUser","uid","key","add","then","filename","image","name","ext","slice","lastIndexOf","storage","ref","put","fileData","getDownloadURL","downloadUrl","update","message","catch","console","log","updateProject","_","nyeProsjekter","produksjonProsjekter","undefined","klasse","delete","updateToInternt","updateToEksternt","updateToUtvalgt","updateToProduksjon","deleteProject","filter","signUserUp","getters","get","exists","createUserWithEmailAndPassword","passord","set","gdpr","isAdmin","joined","updateProfile","displayName","newUser","updateObj","userDoc","updateEmail","signUserIn","signInWithEmailAndPassword","password","loadUser","fetchUserData","userData","where","docs","admin","autoSignIn","logout","signOut","loadedProject","projectId","adminProject","eksterneProsjekter","utvalgteProsjekter","brukerProsjekter"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport * as firebase from 'firebase'\nimport moment from 'moment'\nimport { stat } from 'fs';\n\nVue.use(Vuex)\nmoment.locale('nb')\n\nexport const store = new Vuex.Store({\n  state: {\n    loadedProjects: [],\n    interneProsjekter: [],\n    user: null,\n    loading: false,\n    error: null,\n    success: null\n  },\n  mutations: {\n    setLoadedProjects(state, payload){\n      state.loadedProjects = payload\n    },\n    setInterneProsjekter(state, payload){\n      state.interneProsjekter = payload\n    },\n    setUser(state, payload){\n      state.user = payload\n    },\n    updateUser(state, payload){\n      const user = state.user.find(user => {\n        return user.userId === payload.userId\n      })\n      if(payload.email){\n        user.email = payload.email\n      }\n      if(payload.phone){\n        user.phone = payload.phone\n      }\n    },\n    setLoadedUser(state, payload){\n      state.loadedUser = payload\n    },\n    setLoading(state, payload){\n      state.loading = payload\n    },\n    setError(state, payload){\n      state.error = payload\n    },\n    setSuccess(state, payload){\n      state.success = payload\n    },\n    clearError(state){\n      state.error = null\n    },\n    clearSuccess(state, payload){\n      state.success = null\n    }\n  },\n  actions: {\n    // HENTER PROSJEKTER FRA DATABASEN\n    loadProjects({commit}){\n      const projects = []\n      firebase.firestore().collection('projects').onSnapshot((snapshot) => {\n          snapshot.forEach((doc) => {\n            projects.push({\n                id: doc.id,\n                title: doc.data().title,\n                content: doc.data().content,\n                imageUrl: doc.data().imageUrl,\n                date: moment(doc.data().date).format('LL'),\n                slug: doc.data().slug,\n                internt: doc.data().internt,\n                eksternt: doc.data().eksternt,\n                produksjon: doc.data().produksjon,\n                utvalgt: doc.data().utvalgt,\n                creatorId: doc.data().creatorId\n            }) \n          })\n          \n          commit('setLoading', false)\n          commit('setLoadedProjects', projects)\n      })\n      \n    },\n    // LAGER ET NYTT PROSJEKT\n    createProject({commit}, payload){\n      const project = {\n        title: payload.title,\n        content: payload.content,\n        date: payload.date,\n        slug: payload.slug,\n        internt: false,\n        eksternt: false,\n        utvalgt: false,\n        produksjon: false,\n        creatorId: firebase.auth().currentUser.uid\n      }\n      // LAGRER I DATABASEN\n      let imageUrl\n      let key\n\n      firebase.firestore().collection('projects').add(project)\n      .then((data) => {\n        key = data.id\n        return key\n      }).then(key => {\n        const filename = payload.image.name\n        const ext = filename.slice(filename.lastIndexOf('.'))\n        return firebase.storage().ref('projects/' + key + '.' + ext).put(payload.image)\n      }).then(fileData => {\n        return fileData.ref.getDownloadURL()\n        .then(downloadUrl => {\n          imageUrl = downloadUrl\n          return firebase.firestore().collection('projects').doc(key).update({imageUrl: downloadUrl})\n        })\n        /* imageUrl = fileData.metadata.downloadURLs[0]\n        return firebase.firestore().collection('projects').child(key).update({imageUrl: imageUrl}) */\n      }).then(() => {\n        let success = {message: 'Takk for ditt bidrag!'}\n        commit('setSuccess', success)\n        commit('createProject', {\n          ...project,\n          imageUrl: imageUrl,\n          id: key\n        })\n      }).catch((error) => {\n        console.log(error)\n      })\n    },\n    /* OPPDATERER PROSJEKTET */\n    updateProject(_, payload){\n      console.log(payload.project);\n      var nyeProsjekter = firebase.firestore().collection('projects')\n      var produksjonProsjekter = firebase.firestore().collection('produksjon')\n\n      const project = {\n        title: payload.project.title,\n        content: payload.project.content,\n        date: payload.project.date,\n        slug: payload.project.slug,\n        internt: payload.project.internt,\n        eksternt: payload.project.eksternt,\n        utvalgt: payload.project.utvalgt,\n        produksjon: payload.project.produksjon,\n        creatorId: payload.project.creatorId\n      }\n\n      if(payload.imageUrl === undefined || payload.imageUrl === null){\n        project.imageUrl = ''\n      }\n\n      if(payload.klasse === 1){\n        console.log('Prosjektet er satt i produksjon')\n        console.log(project)\n        nyeProsjekter.doc(payload.project.id).delete()\n        //produksjonProsjekter.add(project)\n      }\n      if(payload.klasse === 2){\n        console.log('Prosjektet er flyttet til Internt');\n        \n      }\n      if(payload.klasse === 3){\n        console.log('Prosjektet er flyttet til eksternt');\n        \n      }\n      if(payload.klasse === 4){\n        console.log('Prosjektet er flyttet til utvalgt');\n        \n      }      \n      \n    },\n    // OPPDTATERER PROSJEKTET TIL INTERNT\n    updateToInternt({commit}, payload){\n      commit('clearSuccess')\n      commit('clearError')\n      firebase.firestore().collection('projects').doc(payload.id).update({\n          internt: true,\n          eksternt: false,\n          produksjon: false\n      }).then(() => {\n          console.log('oppdatert til internt - ' + payload.title) \n      }).catch(error => {\n          console.log(error)\n      })\n    },\n    // OPPDATER PROSJEKTET TIL EKSTERNT\n    updateToEksternt({commit, state}, payload){\n      commit('clearSuccess')\n      commit('clearError')\n      firebase.firestore().collection('projects').doc(payload.id).update({\n          eksternt: true,\n          internt: false,\n          produksjon: false\n      }).then(() => {\n          console.log('oppdatert til eksternt - ' + payload.title) \n      }).catch(error => {\n          console.log(error)\n      })\n    },\n    // OPPDATER PROSJEKTET TIL INTERNT\n    updateToUtvalgt({commit}, payload){\n      commit('clearSuccess')\n      commit('clearError')\n      firebase.firestore().collection('projects').doc(payload.id).update({\n          eksternt: payload.eksternt,\n          internt: payload.internt,\n          produksjon: payload.produksjon,\n          utvalgt: true\n      }).then(() => {\n          console.log('oppdatert til utvalgt - ' + payload.title) \n      }).catch(error => {\n          console.log(error)\n      })\n    },\n    // OPPDATER PROSJEKTET TIL PRODUKSJON\n    updateToProduksjon({commit}, payload){\n      commit('clearSuccess')\n      commit('clearError')\n      firebase.firestore().collection('projects').doc(payload.id).update({\n          eksternt: payload.eksternt,\n          internt: payload.internt,\n          produksjon: true,\n          utvalgt: payload.utvalgt\n      }).then(() => {\n          console.log('oppdatert til produksjon - ' + payload.title) \n      }).catch(error => {\n          console.log(error)\n      })\n    },\n    /* SLETT PROSJEKT */\n    deleteProject({commit, state}, payload){\n      firebase.firestore().collection('projects').doc(payload.id).delete()\n      .then(() => {\n        state.loadedProjects = state.loadedProjects.filter(project => {\n          return project.id != payload.id\n        })\n      })\n      console.log('Slettet prosjekt ' + payload.title)\n    },\n    // REGISTRERER EN NY BRUKER\n    signUserUp({commit, getters}, payload){\n      commit('setLoading', true)\n      commit('clearSuccess')\n      commit('clearError')\n      \n      firebase.firestore().collection('users').doc(payload.user.phone).get()\n      .then(doc => {\n        console.log(doc)\n        if(doc.exists){\n          let error = {message: 'Mobilnummber finnes'}\n          commit('setError', error)\n        } else {\n          firebase.auth().createUserWithEmailAndPassword(payload.email, payload.passord)\n          .then((user) => {\n            firebase.firestore().collection('users').doc(payload.user.phone).set({\n              email: payload.user.email,\n              name: payload.user.name,\n              slug: payload.user.slug,\n              phone: payload.user.phone,\n              gdpr: payload.user.gdpr,\n              isAdmin: false,\n              joined: payload.user.joined,\n              userId: user.user.uid\n            })\n            firebase.auth().currentUser.updateProfile({\n              displayName: payload.user.phone\n            }).then(() => {\n              console.log('oppdatert bruker')\n            }).catch((error) => {\n              console.log(error)\n            })\n            commit('setLoading', false)\n            const newUser = [\n              id = user.uid\n            ]\n            commit('setUser', newUser)\n          }).catch((error) => {\n            commit('setLoading', false)\n            commit('setError', error)\n            console.log(error)\n          })\n        }\n      })\n    },\n    // OPPDATERER BRUKER EPOST OG TELEFONNUMMER\n    updateUser({commit,getters}, payload){\n      commit('setLoading', true)\n      commit('clearSuccess')\n      commit('clearError')\n      const updateObj = {}\n\n      if(payload.email){\n        updateObj.email = payload.email\n      }\n      if(payload.phone){\n        updateObj.phone = payload.phone\n      }\n\n      const userDoc = getters.user[0].phone\n      firebase.auth().currentUser.updateEmail(payload.email).then(() => {\n        commit('setLoading', false)\n        commit('updateUser', payload)\n        let success = {message: 'Epost adresse er endret'}\n        commit('setSuccess', success)\n      }).then(() => {\n        \n      }).catch(error => {\n        console.log(error)\n        commit('setError', error)\n        commit('setLoading', false)\n      })\n\n    },\n    // LOGGER BRUKER INN\n    signUserIn({commit}, payload){\n      commit('setLoading', true)\n      commit('clearSuccess')\n      commit('clearError')\n      \n      firebase.auth().signInWithEmailAndPassword(payload.email, payload.password)\n      .then((user) => {\n        commit('setLoading', false)\n        const newUser = {\n          id: user.uid\n        }\n        commit('setUser', newUser)\n      }).catch((error) => {\n        commit('setLoading', false)\n        commit('setError', error)\n        console.log(error)\n      })\n    },\n    loadUser({commit}, payload){\n\n    },\n    // Henter bruker fra DB\n    fetchUserData({commit}){\n      let userData = []\n\n      firebase.firestore().collection('users')\n      .where('userId', '==', firebase.auth().currentUser.uid).get()\n        .then(snapshot => {\n            snapshot.forEach(doc => {\n              let docs = doc.data()\n              console.log(moment(docs.joined))\n              userData.push({\n                  email: doc.data().email,\n                  name: docs.name,\n                  phone: docs.phone,\n                  admin: docs.isAdmin,\n                  joined: moment(doc.data().joined).format('LL'),\n                  slug: docs.slug,\n                  userId: docs.userId\n                })  \n                console.log('Bruker epost ' + doc.data().email)\n            })\n        })\n        commit('setLoading', false)\n        commit('setUser', userData)\n        \n    },\n    // METODE FOR Å AUTOMATISK LOGGE EN BRUKER INN\n    autoSignIn({commit}, payload){\n      commit('setUser', {id: payload.uid})\n    },\n    // Logger ut bruker\n    logout({commit}){\n      firebase.auth().signOut()\n      commit('setUser', null)\n    },\n    // FJERNER FEILMELDINGER HOS BRUKER\n    clearError({commit}){\n      commit('clearError')\n    },\n    // FJERNER SUCCESS MELDINGEN\n    clearSuccess({commit}){\n      commit('clearSuccess')\n    }\n  },\n  getters: {\n    loadedProjects (state) {\n      return state.loadedProjects\n    },\n    loadedProject (state) {\n      return (projectId) => {\n        return state.loadedProjects.find((project) => {\n          return project.id === projectId\n        })\n      }\n    },\n    adminProject(state){\n      return state.loadedProjects.filter(project => project.internt === false && project.eksternt === false && project.utvalgt === false)\n    },\n    interneProsjekter(state){\n      return state.loadedProjects.filter(project => project.internt)\n    },\n    eksterneProsjekter(state){\n      return state.loadedProjects.filter(project => project.eksternt)\n    },\n    utvalgteProsjekter(state){\n      return state.loadedProjects.filter(project => project.utvalgt)\n    },\n    produksjonProsjekter(state){\n      return state.loadedProjects.filter(project => project.produksjon)\n    },\n    brukerProsjekter(state){\n      return state.loadedProjects.filter(project => project.creatorId === state.user[0].userId)\n    },\n    loadedUser(state){\n      console.log(\"LoadedState user: \" + state.loadedUser)\n      return state.loadedUser   \n    },\n    user(state){\n      console.log(\"state user: \" + state.user)\n      return state.user\n    },\n    loading(state){\n      return state.loading\n    },\n    error(state){\n      return state.error\n    },\n    success(state){\n      return state.success\n    }\n  }\n})\n"]}]}