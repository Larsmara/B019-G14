{"remainingRequest":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/src/components/Project/CreateProject.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/src/components/Project/CreateProject.vue","mtime":1552337780090},{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/node_modules/babel-loader/lib/index.js","mtime":1552476695677},{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/node_modules/vuetify-loader/lib/loader.js","mtime":1552476699349},{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/node_modules/cache-loader/dist/cjs.js","mtime":1552476695799},{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/node_modules/vue-loader/lib/index.js","mtime":1552476699239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport slugify from 'slugify'\n\n  export default {\n    name: 'CreateProject',\n    data(){\n      return{\n        title: null,\n        content: null,\n        image: null,\n        slug: null,\n        imageUrl: null\n      }\n    },\n    computed: {\n        formIsValid(){\n            return this.title !== null && this.content !== null\n        }\n    },\n    methods: {\n        onCreateProject(){\n            if(!this.formIsValid){\n                return\n            }\n\n            this.slug = slugify(this.title, {\n                replacement: '-',\n                remove: /[$*_+~.()'\"!\\._@]/g,\n                lower: true\n            })\n\n            const projectData = {\n                title: this.title,\n                content: this.content,\n                date: Date.now(),\n                image: this.image,\n                slug: this.slug\n            }\n            this.$store.dispatch('createProject', projectData)\n            this.$router.push('/prosjekter')\n        },\n        onFilePicked(event){\n            const files = event.target.files\n            let filename = files[0].name\n            if (filename.lastIndexOf('.') <= 0) {\n            return alert('Please add a valid file!')\n            }\n            const fileReader = new FileReader()\n            fileReader.addEventListener('load', () => {\n            this.imageUrl = fileReader.result\n            })\n            fileReader.readAsDataURL(files[0])\n            this.image = files[0]\n        }\n    }\n  }\n",{"version":3,"sources":["CreateProject.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateProject.vue","sourceRoot":"src/components/Project","sourcesContent":["<template>\n    <div class=\"container new-project\">\n        <!-- <div class=\"row\" v-if=\"tilbakemelding\">\n            <div class=\"card green accent-3\">\n                <h3>{{tilbakemelding}}</h3>\n            </div>\n        </div> -->\n        <form @submit.prevent=\"onCreateProject\" class=\"card-panel\">\n            <h2 class=\"center\">Send oss din idé!</h2>\n            <div class=\"field\">\n                <label for=\"title\">Tittel</label>\n                <input type=\"text\" name=\"title\" v-model=\"title\" required>\n            </div>\n            <div class=\"field\">\n                <label for=\"content\">Forklar din idé</label>\n                <textarea type=\"text\" name=\"content\" v-model=\"content\" class=\"materialize-textarea\" required></textarea>\n            </div>\n            <div class=\"file-field input-field\">\n                <div class=\"btn\">\n                    <span>File</span>\n                    <input type=\"file\" accept=\"image/*\" @change=\"onFilePicked\">\n                </div>\n                <div class=\"file-path-wrapper\">\n                    <input class=\"file-path validate\" type=\"text\">\n                </div>\n            </div>\n            <div class=\"field\" v-if=\"imageUrl\">\n                <img :src=\"imageUrl\" height=\"150px\">\n            </div>\n<!--             <p v-if=\"feedback\" class=\"red-text center\">{{feedback}}</p>--> \n            <div class=\"field\">\n                <button type=\"submit\" class=\"btn blue\" :disabled=\"!formIsValid\">Registrer idé</button>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\nimport slugify from 'slugify'\n\n  export default {\n    name: 'CreateProject',\n    data(){\n      return{\n        title: null,\n        content: null,\n        image: null,\n        slug: null,\n        imageUrl: null\n      }\n    },\n    computed: {\n        formIsValid(){\n            return this.title !== null && this.content !== null\n        }\n    },\n    methods: {\n        onCreateProject(){\n            if(!this.formIsValid){\n                return\n            }\n\n            this.slug = slugify(this.title, {\n                replacement: '-',\n                remove: /[$*_+~.()'\"!\\._@]/g,\n                lower: true\n            })\n\n            const projectData = {\n                title: this.title,\n                content: this.content,\n                date: Date.now(),\n                image: this.image,\n                slug: this.slug\n            }\n            this.$store.dispatch('createProject', projectData)\n            this.$router.push('/prosjekter')\n        },\n        onFilePicked(event){\n            const files = event.target.files\n            let filename = files[0].name\n            if (filename.lastIndexOf('.') <= 0) {\n            return alert('Please add a valid file!')\n            }\n            const fileReader = new FileReader()\n            fileReader.addEventListener('load', () => {\n            this.imageUrl = fileReader.result\n            })\n            fileReader.readAsDataURL(files[0])\n            this.image = files[0]\n        }\n    }\n  }\n</script>\n\n<style>\n.new-project{\n  max-width: 50%;\n}\n</style>\n"]}]}