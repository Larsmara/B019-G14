{"remainingRequest":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/src/components/Admin/Interne.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/src/components/Admin/Interne.vue","mtime":1552337780088},{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/node_modules/cache-loader/dist/cjs.js","mtime":1552476695799},{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/node_modules/babel-loader/lib/index.js","mtime":1552476695677},{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/node_modules/vuetify-loader/lib/loader.js","mtime":1552476699349},{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/node_modules/cache-loader/dist/cjs.js","mtime":1552476695799},{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/node_modules/vue-loader/lib/index.js","mtime":1552476699239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport firebase from 'firebase'\nimport moment from 'moment'\n  export default {\n    name: 'Interne',\n    data () {\n      return {\n        prosjekt: []\n      }\n    },\n    created(){\n        document.title = 'Interne prosjekter'\n\n        firebase.firestore().collection('projects').get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                if(doc.data().internt === true){\n                const data = {\n                    id: doc.id,\n                    title: doc.data().title,\n                    content: doc.data().content,\n                    imageUrl: doc.data().imageUrl,\n                    date: moment(doc.data().date).format('lll'),\n                    slug: doc.data().slug,\n                    internt: doc.data().internt,\n                    eksternt: doc.data().eksternt,\n                    utvalgt: doc.data().utvalgt,\n                    produksjon: doc.data().produksjon,\n                    creatorId: doc.data().creatorId\n                }\n                this.prosjekt.push(data)\n                }\n            })\n        })\n    },\n    methods: {\n      updateToInternt(project, index){\n            this.prosjekt.splice(index, 1)\n            this.$store.dispatch('updateToInternt',project)\n        },\n        updateToEksternt(project, index){\n            this.prosjekt.splice(index, 1)\n            this.$store.dispatch('updateToEksternt',project)\n        },\n        updateToUtvalgt(project, index){\n            this.prosjekt.splice(index, 1)\n            this.$store.dispatch('updateToUtvalgt',project)\n        },\n        updateToProduksjon(project, index){\n            this.prosjekt.splice(index, 1)\n            this.$store.dispatch('updateToProduksjon',project)\n        },\n        deleteProject(project, index){\n            this.prosjekt.splice(index, 1)\n            this.$store.dispatch('deleteProject',project)\n        }\n    },\n    computed: {\n      projects () {\n        return this.$store.getters.interneProsjekter\n      }\n    }\n  }\n",{"version":3,"sources":["Interne.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Interne.vue","sourceRoot":"src/components/Admin","sourcesContent":["<template>\n    <v-container grid-list-md >\n      <h2>Interne Prosjekter</h2>\n        <v-layout row wrap>\n            <v-flex height=\"350px\" xs12 md4 lg4 v-for=\"(project, index) in prosjekt\" :key=\"project.id\">\n                <v-card >\n                    \n                    <v-card-title primary-title>\n                    <div>\n                        <div class=\"headline\">{{project.title}}</div>\n                        <span v-if=\"project.content.length < 100\" class=\"grey--text\">{{project.content}}</span>\n                        <span v-if=\"project.content.length >= 100\" class=\"grey--text\">{{project.content.substring(0,100)}}</span>\n                    </div>\n                    </v-card-title>\n\n                    <v-card-actions>\n                      <v-btn bottom flat :to=\"'/prosjekt/' + project.id\" class=\"blue\">Les mer</v-btn>\n                      <v-btn bottom flat class=\"red\" @click=\"deleteProject(project, index)\">Slett</v-btn>\n                    </v-card-actions>\n                    <v-card-actions>\n                      <v-btn bottom flat class=\"brown\" @click=\"updateToEksternt(project, index)\">Eksterne</v-btn>\n                      <v-btn bottom flat class=\"yellow\" @click=\"updateToUtvalgt(project, index)\">Utvalgt</v-btn>\n                      <v-btn bottom flat class=\"green\" @click=\"updateToProduksjon(project, index)\">Produksjon</v-btn>\n                    </v-card-actions>\n                </v-card>\n            </v-flex>\n        </v-layout>\n    </v-container>\n</template>\n\n<script>\nimport firebase from 'firebase'\nimport moment from 'moment'\n  export default {\n    name: 'Interne',\n    data () {\n      return {\n        prosjekt: []\n      }\n    },\n    created(){\n        document.title = 'Interne prosjekter'\n\n        firebase.firestore().collection('projects').get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                if(doc.data().internt === true){\n                const data = {\n                    id: doc.id,\n                    title: doc.data().title,\n                    content: doc.data().content,\n                    imageUrl: doc.data().imageUrl,\n                    date: moment(doc.data().date).format('lll'),\n                    slug: doc.data().slug,\n                    internt: doc.data().internt,\n                    eksternt: doc.data().eksternt,\n                    utvalgt: doc.data().utvalgt,\n                    produksjon: doc.data().produksjon,\n                    creatorId: doc.data().creatorId\n                }\n                this.prosjekt.push(data)\n                }\n            })\n        })\n    },\n    methods: {\n      updateToInternt(project, index){\n            this.prosjekt.splice(index, 1)\n            this.$store.dispatch('updateToInternt',project)\n        },\n        updateToEksternt(project, index){\n            this.prosjekt.splice(index, 1)\n            this.$store.dispatch('updateToEksternt',project)\n        },\n        updateToUtvalgt(project, index){\n            this.prosjekt.splice(index, 1)\n            this.$store.dispatch('updateToUtvalgt',project)\n        },\n        updateToProduksjon(project, index){\n            this.prosjekt.splice(index, 1)\n            this.$store.dispatch('updateToProduksjon',project)\n        },\n        deleteProject(project, index){\n            this.prosjekt.splice(index, 1)\n            this.$store.dispatch('deleteProject',project)\n        }\n    },\n    computed: {\n      projects () {\n        return this.$store.getters.interneProsjekter\n      }\n    }\n  }\n</script>\n"]}]}