{"remainingRequest":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/node_modules/babel-loader/lib/index.js!/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/node_modules/eslint-loader/index.js??ref--13-0!/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/src/store/user/index.js","dependencies":[{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/src/store/user/index.js","mtime":1552247255620},{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport * as firebase from 'firebase';\nimport moment from 'moment';\nVue.use(Vuex);\nmoment.locale('nb');\nexport default {\n  state: {\n    loadedUser: [],\n    user: null,\n    loading: false,\n    error: null\n  },\n  mutations: {\n    setUser: function setUser(state, payload) {\n      state.user = payload;\n    },\n    setLoadedUser: function setLoadedUser(state, payload) {\n      state.loadedUser = payload;\n    },\n    setLoading: function setLoading(state, payload) {\n      state.loading = payload;\n    },\n    setError: function setError(state, payload) {\n      state.error = payload;\n    },\n    clearError: function clearError(state) {\n      state.error = null;\n    }\n  },\n  actions: {\n    // REGISTRERER EN NY BRUKER\n    signUserUp: function signUserUp(_ref, payload) {\n      var commit = _ref.commit,\n          getters = _ref.getters;\n      commit('setLoading', true);\n      commit('clearError');\n      firebase.firestore().collection('users').doc(payload.user.phone).get().then(function (doc) {\n        if (doc.exists) {\n          var error = {\n            message: 'Mobilnummber finnes'\n          };\n          commit('setError', error);\n        } else {\n          firebase.auth().createUserWithEmailAndPassword(payload.email, payload.passord).then(function (user) {\n            firebase.firestore().collection('users').doc(payload.user.phone).set({\n              email: payload.user.email,\n              name: payload.user.name,\n              slug: payload.user.slug,\n              phone: payload.user.phone,\n              isAdmin: false,\n              joined: payload.user.joined,\n              userId: user.user.uid\n            });\n            firebase.auth().currentUser.updateProfile({\n              displayName: payload.user.phone\n            }).then(function () {\n              console.log('oppdatert bruker');\n            }).catch(function (error) {\n              console.log(error);\n            });\n            commit('setLoading', false);\n            var newUser = {\n              id: user.uid\n            };\n            commit('setUser', newUser);\n          }).catch(function (error) {\n            commit('setLoading', false);\n            commit('setError', error);\n            console.log(error);\n          });\n        }\n      });\n    },\n    // LOGGER BRUKER INN\n    signUserIn: function signUserIn(_ref2, payload) {\n      var commit = _ref2.commit;\n      commit('setLoading', true);\n      commit('clearError');\n      firebase.auth().signInWithEmailAndPassword(payload.email, payload.password).then(function (user) {\n        commit('setLoading', false);\n        var newUser = {\n          id: user.uid\n        };\n        commit('setUser', newUser);\n      }).catch(function (error) {\n        commit('setLoading', false);\n        commit('setError', error);\n        console.log(error);\n      });\n    },\n    loadUser: function loadUser(_ref3, payload) {\n      var commit = _ref3.commit;\n    },\n    // Henter bruker fra DB\n    fetchUserData: function fetchUserData(_ref4) {\n      var commit = _ref4.commit;\n      commit('setLoading', true);\n      var userData = [];\n      firebase.firestore().collection('users').where('userId', '==', firebase.auth().currentUser.uid).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var docs = doc.data();\n          console.log(moment(docs.joined));\n          userData.push({\n            email: doc.data().email,\n            name: docs.name,\n            phone: docs.phone,\n            admin: docs.isAdmin,\n            joined: moment(docs.joined),\n            slug: docs.slug,\n            userId: docs.userId\n          });\n        });\n      });\n      commit('setLoading', false);\n      commit('setUser', userData);\n    },\n    // METODE FOR Ã… AUTOMATISK LOGGE EN BRUKER INN\n    autoSignIn: function autoSignIn(_ref5, payload) {\n      var commit = _ref5.commit;\n      commit('setUser', {\n        id: payload.uid\n      });\n    },\n    // Logger ut bruker\n    logout: function logout(_ref6) {\n      var commit = _ref6.commit;\n      firebase.auth().signOut();\n      commit('setUser', null);\n    },\n    // FJERNER FEILMELDINGER HOS BRUKER\n    clearError: function clearError(_ref7) {\n      var commit = _ref7.commit;\n      commit('clearError');\n    }\n  },\n  getters: {\n    loadedUser: function loadedUser(state) {\n      return state.loadedUser;\n    },\n    user: function user(state) {\n      return state.user;\n    },\n    loading: function loading(state) {\n      return state.loading;\n    },\n    error: function error(state) {\n      return state.error;\n    }\n  }\n};",{"version":3,"sources":["/Users/lars-martin/dev/Bacheloroppgave/B019-G14/v2.1/src/store/user/index.js"],"names":["Vue","Vuex","firebase","moment","use","locale","state","loadedUser","user","loading","error","mutations","setUser","payload","setLoadedUser","setLoading","setError","clearError","actions","signUserUp","commit","getters","firestore","collection","doc","phone","get","then","exists","message","auth","createUserWithEmailAndPassword","email","passord","set","name","slug","isAdmin","joined","userId","uid","currentUser","updateProfile","displayName","console","log","catch","newUser","id","signUserIn","signInWithEmailAndPassword","password","loadUser","fetchUserData","userData","where","snapshot","forEach","docs","data","push","admin","autoSignIn","logout","signOut"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport * as firebase from 'firebase'\nimport moment from 'moment'\n\nVue.use(Vuex)\nmoment.locale('nb')\n\nexport default{\n  state: {\n    loadedUser: [],\n    user: null,\n    loading: false,\n    error: null\n  },\n  mutations: {\n    setUser(state, payload){\n      state.user = payload\n    },\n    setLoadedUser(state, payload){\n      state.loadedUser = payload\n    },\n    setLoading(state, payload){\n      state.loading = payload\n    },\n    setError(state, payload){\n      state.error = payload\n    },\n    clearError(state){\n      state.error = null\n    }\n  },\n  actions: {\n    // REGISTRERER EN NY BRUKER\n    signUserUp({commit, getters}, payload){\n      commit('setLoading', true)\n      commit('clearError')\n      \n      firebase.firestore().collection('users').doc(payload.user.phone).get()\n      .then(doc => {\n        if(doc.exists){\n          let error = {message: 'Mobilnummber finnes'}\n          commit('setError', error)\n        } else {\n          firebase.auth().createUserWithEmailAndPassword(payload.email, payload.passord)\n          .then((user) => {\n            firebase.firestore().collection('users').doc(payload.user.phone).set({\n              email: payload.user.email,\n              name: payload.user.name,\n              slug: payload.user.slug,\n              phone: payload.user.phone,\n              isAdmin: false,\n              joined: payload.user.joined,\n              userId: user.user.uid\n            })\n            firebase.auth().currentUser.updateProfile({\n              displayName: payload.user.phone\n            }).then(() => {\n              console.log('oppdatert bruker')\n            }).catch((error) => {\n              console.log(error)\n            })\n            commit('setLoading', false)\n            const newUser = {\n              id: user.uid\n            }\n            commit('setUser', newUser)\n          }).catch((error) => {\n            commit('setLoading', false)\n            commit('setError', error)\n            console.log(error)\n          })\n        }\n      })\n    },\n    // LOGGER BRUKER INN\n    signUserIn({commit}, payload){\n      commit('setLoading', true)\n      commit('clearError')\n      \n      firebase.auth().signInWithEmailAndPassword(payload.email, payload.password)\n      .then((user) => {\n        commit('setLoading', false)\n        const newUser = {\n          id: user.uid\n        }\n        commit('setUser', newUser)\n      }).catch((error) => {\n        commit('setLoading', false)\n        commit('setError', error)\n        console.log(error)\n      })\n    },\n    loadUser({commit}, payload){\n\n    },\n    // Henter bruker fra DB\n    fetchUserData({commit}){\n      commit('setLoading', true)\n      let userData = []\n\n      firebase.firestore().collection('users')\n      .where('userId', '==', firebase.auth().currentUser.uid).get()\n        .then(snapshot => {\n            snapshot.forEach(doc => {\n              let docs = doc.data()\n              console.log(moment(docs.joined))\n              userData.push({\n                  email: doc.data().email,\n                  name: docs.name,\n                  phone: docs.phone,\n                  admin: docs.isAdmin,\n                  joined: moment(docs.joined),\n                  slug: docs.slug,\n                  userId: docs.userId\n                })  \n            })\n        })\n        commit('setLoading', false)\n        commit('setUser', userData)\n    },\n    // METODE FOR Ã… AUTOMATISK LOGGE EN BRUKER INN\n    autoSignIn({commit}, payload){\n      commit('setUser', {id: payload.uid})\n    },\n    // Logger ut bruker\n    logout({commit}){\n      firebase.auth().signOut()\n      commit('setUser', null)\n    },\n    // FJERNER FEILMELDINGER HOS BRUKER\n    clearError({commit}){\n      commit('clearError')\n    }\n  },\n  getters: {\n    loadedUser(state){\n      return state.loadedUser   \n    },\n    user(state){\n      return state.user\n    },\n    loading(state){\n      return state.loading\n    },\n    error(state){\n      return state.error\n    }\n  }\n}\n"]}]}